syntax = "proto3";
package jkv;
option cc_generic_services = true;

import "eraft.proto";
import "meta.proto";

// the message sent between raft peer, it wraps the raft message.
message RaftMsgReq {
  PeerMeta from_peer = 1;
  PeerMeta to_peer = 2;
  jraft.Message msg = 3;
}

message RaftMsgResp {}

message GetReq {
  bytes key = 1;
}

message GetResp {
  bytes value = 1;
}

message PutReq {
  bytes key = 1;
  bytes value = 2;
}

message PutResp {}

message DelReq {
  bytes key = 1;
}

message DelResp {}

enum CmdType {
  kInvalid = 0;
  kGet = 1;
  kPut = 2;
  kDel = 3;
}

message KvReq {
  CmdType cmd_type = 1;
  GetReq get_req = 2;
  PutReq put_req = 3;
  DelReq del_req = 4;
}

message KvResp {
  CmdType cmd_type = 1;
  bool rejected = 2;
  GetResp get_resp = 3;
  PutResp put_resp = 4;
  DelResp del_resp = 5;
}

service RaftMsgService {
  rpc HandleRaftMsg(RaftMsgReq) returns (RaftMsgResp);
}

service KvService {
  rpc KvOp(KvReq) returns (KvResp);
}
